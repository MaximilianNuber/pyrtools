jobs:
  test:
    strategy:
      matrix:
        python: ["3.9","3.10","3.11","3.12","3.13"]
        platform:
          - ubuntu-latest
          - macos-latest
    runs-on: ${{ matrix.platform }}
    name: Python ${{ matrix.python }} on ${{ matrix.platform }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # ─── NEW: Install R ───────────────────────────────────────────────────────
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.2'

      - name: Install required R packages
        run: |
          Rscript -e 'install.packages(
            c("edgeR","methods"),
            repos="https://cloud.r-project.org"
          )'

      # ─── Existing Python setup ───────────────────────────────────────────────
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox coverage rpy2

      - name: Run tests
        run: |
          pipx run --python '${{ steps.setup-python.outputs.python-path }}' \
            tox \
            -- \
            -rFEx --durations 10 --color yes --cov --cov-branch --cov-report=xml

      - name: Check for codecov token
        id: codecov-check
        run: |
          if [ -n "${{ secrets.CODECOV_TOKEN }}" ]; then
            echo "codecov=true" >> $GITHUB_OUTPUT; else
            echo "codecov=false" >> $GITHUB_OUTPUT; fi

      - name: Upload coverage
        if: steps.codecov-check.outputs.codecov == 'true'
        uses: codecov/codecov-action@v5
        with:
          flags: ${{ matrix.platform }}-py${{ matrix.python }}
          token: ${{ secrets.CODECOV_TOKEN }}


# name: Test the library

# on:
#   push:
#     branches:
#       - master # for legacy repos
#       - main
#   pull_request:
#     branches:
#       - master # for legacy repos
#       - main
#   workflow_dispatch: # Allow manually triggering the workflow
#   schedule:
#     # Run roughly every 15 days at 00:00 UTC
#     # (useful to check if updates on dependencies break the package)
#     - cron: "0 0 1,16 * *"

# permissions:
#   contents: read

# concurrency:
#   group: >-
#     ${{ github.workflow }}-${{ github.ref_type }}-
#     ${{ github.event.pull_request.number || github.sha }}
#   cancel-in-progress: true

# jobs:
#   test:
#     strategy:
#       matrix:
#         python: ["3.9", "3.10", "3.11", "3.12", "3.13"]
#         platform:
#           - ubuntu-latest
#           - macos-latest
#           - windows-latest
#     runs-on: ${{ matrix.platform }}
#     name: Python ${{ matrix.python }}, ${{ matrix.platform }}
#     steps:
#       - uses: actions/checkout@v4

#       - uses: actions/setup-python@v5
#         id: setup-python
#         with:
#           python-version: ${{ matrix.python }}

#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install tox coverage

#       - name: Run tests
#         run: >-
#           pipx run --python '${{ steps.setup-python.outputs.python-path }}'
#           tox
#           -- -rFEx --durations 10 --color yes --cov --cov-branch --cov-report=xml  # pytest args

#       - name: Check for codecov token availability
#         id: codecov-check
#         shell: bash
#         run: |
#           if [ ${{ secrets.CODECOV_TOKEN }} != '' ]; then
#             echo "codecov=true" >> $GITHUB_OUTPUT;
#           else
#             echo "codecov=false" >> $GITHUB_OUTPUT;
#           fi

#       - name: Upload coverage reports to Codecov with GitHub Action
#         uses: codecov/codecov-action@v5
#         if: ${{ steps.codecov-check.outputs.codecov == 'true' }}
#         env:
#           CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
#           slug: ${{ github.repository }}
#           flags: ${{ matrix.platform }} - py${{ matrix.python }}

#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v4

#       - name: Set up R
#         uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: '4.2'

#       - name: Install required R packages
#         run: |
#           Rscript -e 'install.packages(c("edgeR","methods"), repos="https://cloud.r-project.org")'

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.12'

#       - name: Install Python dependencies
#         run: |
#           pip install .[tests,rpy2]

#       - name: Run pytest
#         run: pytest -q